// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Header$ReactTemplate = require("./Header.bs.js");
var ListItem$ReactTemplate = require("./ListItem.bs.js");
var DataFetcher$ReactTemplate = require("./DataFetcher.bs.js");

var component = ReasonReact.reducerComponent("ListPage");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", undefined, ReasonReact.element(undefined, undefined, Header$ReactTemplate.make("Lists", /* array */[])), React.createElement("div", {
                              className: "listpage"
                            }, Belt_Array.mapWithIndex(DataFetcher$ReactTemplate.getWordLists, (function (index, list) {
                                    return ReasonReact.element(String(list[/* id */1]), undefined, ListItem$ReactTemplate.make(list[/* name */0], list[/* id */1], /* array */[]));
                                  }))));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* count */0,
                      /* show */true
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[
                            /* count */state[/* count */0],
                            /* show */!state[/* show */1]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* count */state[/* count */0] + 1 | 0,
                            /* show */state[/* show */1]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
